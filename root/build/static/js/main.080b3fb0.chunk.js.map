{"version":3,"sources":["Components/MenuButton.jsx","Components/Home.jsx","Components/ButtonAppBar.jsx","Components/Scholarship.jsx","Components/AboutYourSelf.jsx","Input.jsx","SignIn.jsx","Components/LearnOnline.jsx","Components/OnlineCounselling.jsx","Components/InfoVideos.jsx","Components/LiveInteractionClass.jsx","Components/MyCourses.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","padding","btn","background","color","textShadow","boxShadow","MenuButton","props","classes","Button","variant","className","name","menuicon","paddingRight","Home","to","about","counselling","flexGrow","backButton","marginRight","title","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","window","history","back","Typography","Scholarship","AboutYourSelf","Input","type","placeholder","SignIn","pattern","LearnOnline","paddingTop","OnlineCounselling","InfoVideos","LiveInteractionClass","MyCourses","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.080b3fb0.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    padding: \"10px\",\n  },\n  btn: {\n    background: \"white\",\n    color: \"#747070\",\n    textShadow: \"3px 2px 7px #5A4343 \",\n    boxShadow: \"3px 3px 20px #0000000\",\n    margin: \"15px\",\n  },\n}));\n\nexport default function MenuButton(props) {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"contained\" className={classes.btn}>\n      {props.name}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuButton from \"./MenuButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  menuicon: {\n    paddingRight: \"18rem\",\n  },\n}));\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <>\n      <MenuIcon className={classes.menuicon} />\n      <Link to=\"/aboutyourself\">\n        <MenuButton name=\"About Your Self\" className={classes.about} />\n      </Link>\n      <Link to=\"/onlinecounselling\">\n        <MenuButton name=\"Online Counselling\" className={classes.counselling} />\n      </Link>\n\n      <Link to=\"/scholarship\">\n        <MenuButton name=\"Scholarship\" />\n      </Link>\n      <Link to=\"/learnonline\">\n        <MenuButton name=\"Learn Online\" />\n      </Link>\n      <Link to=\"/infovideos\">\n        <MenuButton name=\"Info Videos\" />\n      </Link>\n      <Link to=\"/mycourses\">\n        <MenuButton name=\"My Courses\" />\n      </Link>\n      <Link to=\"/liveinteractionclass\">\n        <MenuButton name=\"Live Interaction Class\" />\n      </Link>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  //   Toolbar: {\n  //     backgroundColor: \"transperent\",\n  //     color: \"#000\",\n  //   },\n  backButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.Toolbar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.backButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <KeyboardBackspaceIcon onClick={() => window.history.back()} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nexport default function Scholarship() {\n  return (\n    <>\n      <ButtonAppBar title=\"Scholarship\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nexport default function AboutYourSelf() {\n  return (\n    <>\n      <ButtonAppBar title=\"About Your Self\" />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Input(props) {\n  return (\n    <>\n      <input type={props.type} placeholder={props.placeholder} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Input from \"./Input\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function SignIn() {\n  return (\n    <>\n      <Input pattern=\"[0-9]\" type=\"number\" placeholder=\"Enter Mobile Number\" />\n      <Button>Sign In</Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\nimport SignIn from \"../SignIn\";\n\nexport default function LearnOnline() {\n  return (\n    <>\n      <ButtonAppBar title=\"Learn Online\" />\n      <SignIn />\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\nimport MenuButton from \"./MenuButton\";\nimport { makeStyles, StylesProvider } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    paddingTop: \"50%\",\n  },\n  btn: {\n    background: \"black\",\n    color: \"#747070\",\n    textShadow: \"3px 2px 7px #5A4343 \",\n    boxShadow: \"3px 3px 20px #0000000\",\n    margin: \"15px\",\n  },\n}));\n\nexport default function OnlineCounselling() {\n  const classes = useStyles();\n  return (\n    <>\n      <ButtonAppBar title=\"Online Counselling\" />\n      <div className={classes.root}>\n        <MenuButton name=\"Free\" />\n\n        <MenuButton name=\"Paid\" />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nexport default function InfoVideos() {\n  return (\n    <>\n      <ButtonAppBar title=\"InfoVideos\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nexport default function LiveInteractionClass() {\n  return (\n    <>\n      <ButtonAppBar title=\"Live Interaction Class\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport ButtonAppBar from \"./ButtonAppBar\";\n\nexport default function MyCourses() {\n  return (\n    <>\n      <ButtonAppBar title=\"My Courses\" />\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n// import SignUp from \"./SignUP\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./Components/Home\";\n\nimport Scholarship from \"./Components/Scholarship\";\nimport AboutYourSelf from \"./Components/AboutYourSelf\";\nimport LearnOnline from \"./Components/LearnOnline\";\nimport OnlineCounselling from \"./Components/OnlineCounselling\";\nimport InfoVideos from \"./Components/InfoVideos\";\nimport LiveInteractionClass from \"./Components/LiveInteractionClass\";\nimport MyCourses from \"./Components/MyCourses\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n\n            <Route path=\"/aboutyourself\" component={AboutYourSelf}></Route>\n            <Route path=\"/scholarship\" component={Scholarship}></Route>\n            <Route path=\"/learnonline\" component={LearnOnline}></Route>\n            <Route\n              path=\"/onlinecounselling\"\n              component={OnlineCounselling}\n            ></Route>\n            <Route path=\"/infovideos\" component={InfoVideos}></Route>\n            <Route path=\"/mycourses\" component={MyCourses}></Route>\n            <Route\n              path=\"/liveinteractionclass\"\n              component={LiveInteractionClass}\n            ></Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}